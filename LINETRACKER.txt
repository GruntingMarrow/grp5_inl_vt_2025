LINETRACKER

import RPi.GPIO as GPIO
import time
import paho.mqtt.client as mqtt


GPIO.setwarnings(False)


MQTT_BROKER = "localhost" 
MQTT_PORT = 1883
MQTT_TOPIC = "gruvmaskin/dorr"

LINE_SENSOR = 27
GREEN_LED = 17
RED_LED = 22

GPIO.setmode(GPIO.BCM)
GPIO.setup(LINE_SENSOR, GPIO.IN)
GPIO.setup(GREEN_LED, GPIO.OUT)
GPIO.setup(RED_LED, GPIO.OUT)


client = mqtt.Client()

def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("‚úÖ Ansluten till MQTT-broker!")
    else:
        print(f"‚ùå Fel vid anslutning: {rc}")

def connect_mqtt():
    try:
        client.connect(MQTT_BROKER, MQTT_PORT, 60)
        client.loop_start()
    except Exception as e:
        print(f"‚ùå MQTT-anslutningsfel: {e}")
        time.sleep(5)
        connect_mqtt()

client.on_connect = on_connect
connect_mqtt()

previous_state = None  

try:
    while True:
        sensor_value = GPIO.input(LINE_SENSOR)

        if sensor_value == 0:
            GPIO.output(GREEN_LED, GPIO.HIGH)
            GPIO.output(RED_LED, GPIO.LOW)
            current_state = "D√∂rr st√§ngd"
        else:
            GPIO.output(GREEN_LED, GPIO.LOW)
            GPIO.output(RED_LED, GPIO.HIGH)
            current_state = "D√∂rr √∂ppen"
        
        if current_state != previous_state:
            print(f"üì° Status√§ndring: {current_state}")
            client.publish(MQTT_TOPIC, current_state)
            previous_state = current_state

        time.sleep(0.1)

except KeyboardInterrupt:
    print("üõë Avslutar...")
    GPIO.cleanup()
    client.disconnect()
